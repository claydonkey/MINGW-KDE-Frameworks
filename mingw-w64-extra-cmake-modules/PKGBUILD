 #Maintainer (KDE): Anthony Campbell <anthony@claydonkey.com>

_variant=-${KF5_VARIANT:-shared}
_stripped=${KF5_STRIP:strip}
_releasetype=${KF5_RELEASE:!debug}
_realname="extra-cmake-modules"
pkgbase=${MINGW_PACKAGE_PREFIX}-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
url=https://projects.kde.org/projects/frameworks/${_PKG}
pkgver=5.38.0.rc2.2924.8b4033f
pkgrel=1
arch=('x86_64')
url='https://projects.kde.org/projects/frameworks/${_basename}'
pkgdesc="Extra modules and scripts for CMake. (mingw-w64-qt5${_namesuff})"
license=('LGPL')
depends=("${MINGW_PACKAGE_PREFIX}-cmake" "${MINGW_PACKAGE_PREFIX}-png2ico")
makedepends=("${MINGW_PACKAGE_PREFIX}-python3-sphinx" mingw-w64-x86_64-libidn)  
groups=('kf5')
source=("${_realname}"::git+https://github.com/KDE/${_realname}.git
    "set-AUTOSTATICPLUGINS.patch")
sha256sums=('SKIP'
            'a246d25065ac7472b3a4e5995b3c6cb32081ffa21c7de7455006398431e6c886')
options=(${_stripped} ${_releasetype})

pkgver() {
  cd "${srcdir}/${_realname}"
  printf "%s%s.%s.%s"  "$(git describe --tags $(git rev-list --tags --max-count=1) | tr - . )" "$_ver_base" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)" | cut -c 2-  #replace hyphen with period  to comply with pacver
}

prepare() {
  mkdir -p build-${CARCH}${_variant}
  cd "${srcdir}/${_realname}"
  patch -p1 -i "${srcdir}/set-AUTOSTATICPLUGINS.patch"
}

build() {
  local -a extra_config 
  cd build-${CARCH}${_variant}
  if [ "${_variant}" = "-static" ]; then
    extra_config+=( -DBUILD_SHARED_LIBS=NO )
    QT5_PREFIX=${MINGW_PREFIX}/qt5-static
    export PATH=${QT5_PREFIX}/bin:"$PATH"
  else
    QT5_PREFIX=${MINGW_PREFIX}
  fi 

  MSYS2_ARG_CONV_EXCL=-DCMAKE_INSTALL_PREFIX \
    cmake ../${_realname} \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${QT5_PREFIX} \
    -DLIB_INSTALL_DIR=lib \
    -DECM_MKSPECS_INSTALL_DIR=${QT5_PREFIX} \
    -DQt5_DIR=${QT5_PREFIX}/lib/cmake/Qt5 \
    -DBUILD_TESTING=OFF \
    -DECM_DIR=${MINGW_PREFIX}/share/ECM \
    "${extra_config[@]}" \
    -G'MSYS Makefiles'
  make
}

package() {
  cd build-${CARCH}${_variant}
  make DESTDIR="${pkgdir}" install
}
